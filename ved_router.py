import json
import os
import re

def route_message(text, ved_db=None):
    try:
        if not ved_db:
            return "üß† –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω: " + text + "\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –¢–ù –í–≠–î –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞."
        
        # –ü–æ–∏—Å–∫ –∫–æ–¥–∞ –¢–ù –í–≠–î –≤ —Ç–µ–∫—Å—Ç–µ (10 —Ü–∏—Ñ—Ä)
        tnved_pattern = r'\b\d{10}\b'
        tnved_match = re.search(tnved_pattern, text)
        
        if tnved_match:
            code = tnved_match.group()
            product = ved_db.get_product_by_code(code)
            
            if product:
                return format_product_info(product)
            else:
                return f"‚ùå –ö–æ–¥ –¢–ù –í–≠–î {code} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        
        # –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞
        result = ved_db.search_product(text)
        if result and result.get('product'):
            return format_product_info(result['product'])
        
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        return f"üß† –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {text}\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É–∫–∞–∂–∏—Ç–µ:\n‚Ä¢ –ö–æ–¥ –¢–ù –í–≠–î (10 —Ü–∏—Ñ—Ä)\n‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n\n–ü—Ä–∏–º–µ—Ä: 8471300000 –∏–ª–∏ –Ω–æ—É—Ç–±—É–∫"
            
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}"

def format_product_info(product):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –¥–ª—è –≤—ã–≤–æ–¥–∞"""
    blocks = []
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    title = f"üìä *{product.get('name', '–¢–æ–≤–∞—Ä')}*"
    code_block = f"üìå –ö–æ–¥ –¢–ù –í–≠–î: `{product.get('code', '–ù/–î')}`"
    desc_block = f"üìù {product.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}"
    group_block = f"üîç –ì—Ä—É–ø–ø–∞: {product.get('group', '–ù/–î')}"
    
    blocks.extend([title, code_block, desc_block, group_block])
    
    # –ü–æ—à–ª–∏–Ω—ã
    duties = product.get('duties', {})
    if duties:
        duties_text = "üí∞ *–ü–æ—à–ª–∏–Ω—ã:*"
        for country, rate in duties.items():
            country_name = {
                'base': '–ë–∞–∑–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞',
                'china': '–ö–∏—Ç–∞–π', 
                'eu': '–ï–°',
                'usa': '–°–®–ê'
            }.get(country.lower(), country.capitalize())
            duties_text += f"\n‚Ä¢ {country_name}: {rate}%"
        blocks.append(duties_text)
    
    # –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    cert = product.get('certification', [])
    if cert:
        cert_text = "üìÑ *–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:*\n‚Ä¢ " + "\n‚Ä¢ ".join(cert)
        blocks.append(cert_text)
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    restrictions = product.get('restrictions', [])
    if restrictions:
        rest_text = "‚ö†Ô∏è *–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:*\n‚Ä¢ " + "\n‚Ä¢ ".join(restrictions)
        blocks.append(rest_text)
    else:
        blocks.append("‚úÖ *–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:* –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    return "\n\n".join(blocks)